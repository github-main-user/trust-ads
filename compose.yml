services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgres/data
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -p ${DB_PORT}"]
      interval: 10s
      timeout: 5s
      start_period: 5s

  web:
    build: .
    command: bash -c "python manage.py migrate &&
                      python manage.py collectstatic --noinput &&
                      gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    env_file: .env
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
    restart: on-failure

volumes:
  pgdata:
